{"version":3,"sources":["frontend/base/default/ebanx/js/checkout.js"],"names":["handleEbanxForm","countryCode","paymentType","getById","element","responseData","getElementById","cardNumber","cardName","cardExpirationMonth","cardExpirationYear","cardCvv","ebanxToken","ebanxBrand","ebanxMaskedCardNumber","ebanxDeviceFingerprint","ebanxMode","ebanxCountry","hasEbanxForm","value","EBANX","config","setMode","mode","ebanxIntegrationKey","setCountry","isFormEmpty","handleToken","length","generateToken","placeOrderButton","disabled","querySelector","card_name","card_due_date","parseInt","card_cvv","saveToken","response","hasOwnProperty","masked_card_number","document","addEventListener","clearResponseData"],"mappings":"aAAA,SAASA,gBAAgBC,EAAaC,GACpC,IAAIC,EAAU,SAAUC,GAD1B,OAASJ,SAAAA,eAAgBC,IAErBI,EAAgBC,KAEdD,EAAAA,EAAJ,SAAAH,EAAA,IAAAD,EAAA,IAAAC,EAAA,SAGIK,EAAaJ,EAAQ,SAAWD,EAAc,IAAMD,EAAc,IAAMC,EAAc,WADtFM,EAAmBL,EAAWD,SAAXA,EAA+BD,IAA/BA,EAAmDC,eACtEK,EAAqBJ,EAAA,SAAWD,EAAoBD,IAAAA,EAAoBC,kBACxEO,EAAAA,EAAAA,SAAsBN,EAAmBD,IAAAA,EAAoBD,IAAAA,EAAc,QAC3ES,EAAAA,EAAqBP,SAAQD,EAAWA,IAAXD,EAA+BA,UAC5DU,EAAUR,EAAQ,SAAWD,EAAX,IAA+BD,EAA/B,UAClBW,EAAqBT,EAAWD,SAAXA,EAA+BD,IAA/BA,EAAzB,uBACIY,EAAqBV,EAAWD,SAAXA,EAA+BD,IAA/BA,EAAzB,uBACIa,EAAAA,EAAAA,SAAwBX,EAAmBD,IAAAA,EAAoBD,SAC/Dc,EAAAA,EAAyBZ,SAAQD,EAAA,IAAAD,EAAA,oBACjCe,EAAYb,EAAQ,SAAWD,EAAX,IAA+BD,EAAc,YAEjEgB,OAAJ,IAAmBd,EAAQ,sBAA+BF,EAAc,IAAAA,GAEpEiB,EAAsBf,YAAtBe,EAAeC,MAAe,OAAA,aAGlCC,MAAMC,OAAOC,QAAQC,GADrBH,MAAIG,OAAOP,kBAAoBQ,EAApBL,OACXC,MAAMC,OAAOC,WAAQC,EAArBJ,OAEAC,IAAAA,EAAaK,WAGNC,KADHC,KAAJD,EAAA,WAOE,QAAQnB,EAAWY,MAAMS,QADvBF,EAAAA,MAAcE,QAChBnB,EAAmBU,MAAMS,QAD3BlB,EAAAS,MAAAS,QAKKjB,EAAQQ,MAAMS,SAKfC,EAAIC,WACJ,IAAAzB,EAAWyB,CACTA,IAAAA,EAAiBC,SAAWC,cAA5B,2CACD,IAAAF,GAAAA,IADCA,EAAiBC,UAAW,GAK5BE,MAAAA,KAAAA,aACAC,YAAAA,SAAgBC,EAAS1B,MAAAA,QAAoBU,KAA7B,KAChBiB,UAAUzB,EAAQQ,MAJpBe,eAAAC,SAAA1B,EAAAU,QAAA,GAAA,KAAAgB,SAAAzB,EAAAS,QAAA,GAMDiB,SAAAzB,EAAAQ,OAbHkB,KAkBIhC,EAAAA,SAAeiC,GACf1B,GAAAA,EAAWO,KAAXoB,eAAmBlC,UAAnBO,CACAC,EAAWM,EAAQd,KACnBS,EAAAA,MAAAA,EAA8BT,MAC9BU,EAAAA,MAAAA,EAA+BV,kBAD/BS,EAAsBK,MAAQd,EAAamC,mBAG3CzB,EAAuB0B,MAAAA,EAAST,SAE9BF,IAAAA,EAAiBC,SAAWC,cAA5B,2CACD,IAAAF,GAAAA,IACDA,EAAAC,UAAA,UAMFnB,EAAA,WACAC,EAAWM,KACXL,EAAAA,MAAAA,GACAC,EAAAA,MAAAA,GALFD,EAAAK,MAAA,GAKEJ,EAAuBI,MAAQ,IAK/BZ,IACAE,EAAAA,iBAAoBiC,OAAAA,GAAyBf,GAC7CjB,EAAAA,iBAAmBgC,OAAiBf,GAAQA,GAC5ChB,EAAQ+B,iBAAyBf,OAAjCA,GAAA,GADAjB,EAAmBgC,iBAAiB,OAAQf,GAAa,GAGzDnB,EAAAA,iBAAA,OAA0BmB,GAAUgB,GAEpClC,EAAAA,iBAAoBiC,SAApBC,GAA+CA,GAC/CjC,EAAAA,iBAAmBgC,SAAiBC,GAAUA,GAC9ChC,EAAQ+B,iBAA2BC,SAAAA,GAAnC,GACDjC,EAAAgC,iBAAA,SAAAC,GAAA,GACFhC,EAAA+B,iBAAA,SAAAC,GAAA","file":"checkout.js","sourcesContent":["function handleEbanxForm(countryCode, paymentType) {\n  var getById = function (element) {\n    return document.getElementById(element);\n  };\n  var responseData = null;\n\n  var cardName = getById('ebanx_' + paymentType + '_' + countryCode + '_' + paymentType + '_name');\n  var cardNumber = getById('ebanx_' + paymentType + '_' + countryCode + '_' + paymentType + '_number');\n  var cardExpirationMonth = getById('ebanx_' + paymentType + '_' + countryCode + '_expiration');\n  var cardExpirationYear = getById('ebanx_' + paymentType + '_' + countryCode + '_expiration_yr');\n  var cardCvv = getById('ebanx_' + paymentType + '_' + countryCode + '_' + paymentType + '_cid');\n  var ebanxToken = getById('ebanx_' + paymentType + '_' + countryCode + '_token');\n  var ebanxBrand = getById('ebanx_' + paymentType + '_' + countryCode + '_brand');\n  var ebanxMaskedCardNumber = getById('ebanx_' + paymentType + '_' + countryCode + '_masked_card_number');\n  var ebanxDeviceFingerprint = getById('ebanx_' + paymentType + '_' + countryCode + '_device_fingerprint');\n  var ebanxMode = getById('ebanx_' + paymentType + '_' + countryCode + '_mode');\n  var ebanxIntegrationKey = getById('ebanx_' + paymentType + '_' + countryCode + '_integration_key');\n  var ebanxCountry = getById('ebanx_' + paymentType + '_' + countryCode + '_country');\n\n  var hasEbanxForm = typeof getById('payment_form_ebanx_' + paymentType + '_' + countryCode) !== 'undefined';\n\n  var mode = ebanxMode.value === 'sandbox' ? 'test' : 'production';\n  EBANX.config.setMode(mode);\n  EBANX.config.setPublishableKey(ebanxIntegrationKey.value);\n  EBANX.config.setCountry(ebanxCountry.value);\n\n  var handleToken = function () {\n    if (!isFormEmpty()) {\n      generateToken();\n    }\n  };\n\n  var isFormEmpty = function () {\n    return !cardNumber.value.length ||\n      !cardName.value.length ||\n      !cardExpirationMonth.value.length ||\n      !cardExpirationYear.value.length ||\n      !cardCvv.value.length;\n  };\n\n  var generateToken = function () {\n    if (!responseData) {\n      var placeOrderButton = document.querySelector('#review-buttons-container > button');\n      if (typeof placeOrderButton !== 'undefined' && placeOrderButton) {\n        placeOrderButton.disabled = true;\n      }\n\n      EBANX.card.createToken({\n        card_number: parseInt(cardNumber.value.replace(/ /g, '')),\n        card_name: cardName.value,\n        card_due_date: (parseInt(cardExpirationMonth.value) || 0) + '/' + (parseInt(cardExpirationYear.value) || 0),\n        card_cvv: cardCvv.value\n      }, saveToken);\n    }\n  };\n\n  var saveToken = function (response) {\n    if (response.data.hasOwnProperty('status')) {\n      responseData = response.data;\n      ebanxToken.value = responseData.token;\n      ebanxBrand.value = responseData.payment_type_code;\n      ebanxMaskedCardNumber.value = responseData.masked_card_number;\n      ebanxDeviceFingerprint.value = responseData.deviceId;\n\n      var placeOrderButton = document.querySelector('#review-buttons-container > button');\n      if (typeof placeOrderButton !== 'undefined' && placeOrderButton) {\n        placeOrderButton.disabled = false;\n      }\n      return;\n    }\n  };\n\n  var clearResponseData = function () {\n    responseData = null;\n    ebanxToken.value = '';\n    ebanxBrand.value = '';\n    ebanxMaskedCardNumber.value = '';\n    ebanxDeviceFingerprint.value = '';\n  };\n\n  if (hasEbanxForm) {\n    cardName.addEventListener('blur', handleToken, false);\n    cardNumber.addEventListener('blur', handleToken, false);\n    cardExpirationMonth.addEventListener('blur', handleToken, false);\n    cardExpirationYear.addEventListener('blur', handleToken, false);\n    cardCvv.addEventListener('blur', handleToken, false);\n\n    cardName.addEventListener('change', clearResponseData, false);\n    cardNumber.addEventListener('change', clearResponseData, false);\n    cardExpirationMonth.addEventListener('change', clearResponseData, false);\n    cardExpirationYear.addEventListener('change', clearResponseData, false);\n    cardCvv.addEventListener('change', clearResponseData, false);\n  }\n}\n"]}