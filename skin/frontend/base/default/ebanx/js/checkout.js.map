{"version":3,"sources":["frontend/base/default/ebanx/js/checkout.js"],"names":["handleEbanxForm","countryCode","paymentType","responseData","getById","element","mode","getElementById","value","ebanxMode","cardName","cardNumber","cardExpirationYear","cardCvv","ebanxToken","ebanxBrand","ebanxMaskedCardNumber","ebanxIntegrationKey","hasEbanxForm","config","ebanxCountry","length","response","hasOwnProperty","ebanxDeviceFingerprint","payment_type_code","EBANX","placeOrderButton","setPublishableKey","disabled","saveToken","data","token","createToken","card_number","parseInt","replace","card_name","deviceId","card_cvv","isFormEmpty","handleToken","cardExpirationMonth","generateToken","clearResponseData","document","querySelector","card","addEventListener"],"mappings":"aAAA,IAAAA,gBAAA,SAAAC,EAAAC,GAGE,IAAIC,EAAe,KADiCC,EAAA,SAAAC,GACpD,OAAIF,SAAAA,eAAJE,IAEAC,EAAA,YACkBC,EAAAA,SAAeF,EAAfE,IAAhBN,EAAgBM,SADlBC,MAAA,OAAA,aAIMC,EAAYL,EAAAA,SACLK,EADKL,IACLH,EADKG,IACLF,EADKE,SAGZM,EAAWN,EAAAA,SAGXO,EAHWP,IAGEA,EAHFA,IAINF,EAJME,WASXQ,EAAqBR,EAAAA,SAGrBS,EAHqBT,IAGXA,EAHWA,eAOrBU,EAAaV,EAAAA,SACbW,EADaX,IACAA,EADAA,kBAGbY,EAAAA,EAAAA,SANKd,EAMLc,IANoBf,EAMpBe,IANmCd,EAMnCc,QAQAC,EAAAA,EAAAA,SAAsBb,EAAtBa,IACKf,EADLe,UAVAF,EAAaX,EAAAA,SAAiBF,EAAjB,IAAgCD,EAAhC,UAEbe,EAAwBZ,EAAAA,SAcxBc,EAdwB,IAcFd,EAdE,uBAoBxBe,EAAyBF,EAAAA,SACzBE,EADyBF,IACPG,EADOH,uBAI7BA,EAAyBI,EAAAA,SAD3BnB,EAC2BmB,IAD3BpB,EAC2BoB,oBAOrBC,EAAcC,EAAAA,SAAerB,EAAfqB,IAA0BtB,EAA1BsB,YAEhBT,OAGAU,IAHmBrB,EAAAA,sBACAA,EADAA,IACasB,GAIhCC,MAAAP,OAAMQ,QAAAA,GAGND,MAAAP,OAAIS,kBAAAX,EAA2CU,OAC7CA,MAAAA,OAAAA,WAAiBE,EAAWrB,OAE9B,IASAsB,EAAWH,SAAAA,GACTA,GAAAA,EAAAA,KAAAA,eAA4B,UAA5B,CACDxB,EAAAmB,EAAAS,KAtBDjB,EAAWN,MAAQL,EAAa6B,MAwBhCjB,EAAOW,MAAWO,EAChBR,kBACES,EAAaC,MAASxB,EAAiByB,mBACvCC,EAAoB7B,MAFtBL,EAAAmC,SAIEC,IAAAA,EAAkB/B,SAAAA,cALf,sCAaT,YAtBF,IAAAmB,GAAAA,IANMA,EAAiBE,UAAW,IA4B3BW,IAyBNC,EAAA,WAlDE9B,EAAAH,MAAAa,QAAAX,EAAAF,MAAAa,QAfHqB,EAAAlC,MAAAa,QAJKT,EAAmBJ,MAAMa,QAsBxBsB,EAAAA,MAAAA,QAAgB,WA2BtB,IAAMC,EAAAA,CACJzC,IAAAA,EAAA0C,SAAAC,cACAhC,2CAEA,IAAAE,GAAAW,IACAH,EAAAA,UAA+B,GAG7BN,MAAJ6B,KAAkBd,aAEhBtB,YAAWqC,SAAiBrC,EAAQ8B,MAAAA,QAAa,KAAjD,KACAC,UAAAA,EAAoBM,MACpBpC,eAAmBoC,SAAAA,EAAyBP,QAA5C,GAAA7B,KAAAuB,SAAAvB,EAAAJ,QAAA,GACAK,SAAQmC,EAARxC,OAEAE,IAnBEiC,IAIEC,EAAoB,WACxBzC,EAAe,KACfW,EAAWN,MAAQ,GACnBO,EAAWP,MAAQ,GACnBQ,EAAsBR,MAAQ,GAC9BgB,EAAuBhB,MAAQ,IAG7BU,IACFR,EAASsC,iBAAiB,OAAQP,GAAa,GAC/C9B,EAAWqC,iBAAiB,OAAQP,GAAa,GACjDC,EAAoBM,iBAAiB,OAAQP,GAAa,GAC1D7B,EAAmBoC,iBAAiB,OAAQP,GAAa,GACzD5B,EAAQmC,iBAAiB,OAAQP,GAAa,GAE9C/B,EAASsC,iBAAiB,SAAUJ,GAAmB,GACvDjC,EAAWqC,iBAAiB,SAAUJ,GAAmB,GACzDF,EAAoBM,iBAAiB,SAAUJ,GAAmB,GAClEhC,EAAmBoC,iBAAiB,SAAUJ,GAAmB,GACjE/B,EAAQmC,iBAAiB,SAAUJ,GAAmB","file":"checkout.js","sourcesContent":["/* global EBANX */\n\nvar handleEbanxForm = (countryCode, paymentType) => { // eslint-disable-line no-unused-vars\n  let responseData = null;\n\n  const getById = element => {\n    return document.getElementById(element);\n  };\n\n  const ebanxMode = getById(`ebanx_${paymentType}_${countryCode}_mode`);\n  const mode = ebanxMode.value === 'sandbox' ? 'test' : 'production';\n\n  const cardName = getById(\n    `ebanx_${paymentType}_${countryCode}_${paymentType}_name`\n  );\n  const cardNumber = getById(\n    `ebanx_${paymentType}_${countryCode}_${paymentType}_number`\n  );\n  const cardExpirationMonth = getById(\n    `ebanx_${paymentType}_${countryCode}_expiration`\n  );\n  const cardExpirationYear = getById(\n    `ebanx_${paymentType}_${countryCode}_expiration_yr`\n  );\n  const cardCvv = getById(\n    `ebanx_${paymentType}_${countryCode}_${paymentType}_cid`\n  );\n\n  const ebanxToken = getById(`ebanx_${paymentType}_${countryCode}_token`);\n  const ebanxBrand = getById(`ebanx_${paymentType}_${countryCode}_brand`);\n\n  const ebanxMaskedCardNumber = getById(\n    `ebanx_${paymentType}_${countryCode}_masked_card_number`\n  );\n\n  const ebanxDeviceFingerprint = getById(\n    `ebanx_${paymentType}_${countryCode}_device_fingerprint`\n  );\n\n  const ebanxIntegrationKey = getById(\n    `ebanx_${paymentType}_${countryCode}_integration_key`\n  );\n\n  const ebanxCountry = getById(`ebanx_${paymentType}_${countryCode}_country`);\n\n  const hasEbanxForm = typeof getById(\n    `payment_form_ebanx_${paymentType}_${countryCode}`\n  ) !==\n    'undefined';\n\n  EBANX.config.setMode(mode);\n  EBANX.config.setPublishableKey(ebanxIntegrationKey.value);\n  EBANX.config.setCountry(ebanxCountry.value);\n\n  const isFormEmpty = () => {\n    return !cardNumber.value.length || !cardName.value.length ||\n      !cardExpirationMonth.value.length ||\n      !cardExpirationYear.value.length ||\n      !cardCvv.value.length;\n  };\n\n  const saveToken = response => {\n    if (response.data.hasOwnProperty('status')) {\n      responseData = response.data;\n      ebanxToken.value = responseData.token;\n      ebanxBrand.value = responseData.payment_type_code;\n      ebanxMaskedCardNumber.value = responseData.masked_card_number;\n      ebanxDeviceFingerprint.value = responseData.deviceId;\n\n      const placeOrderButton = document.querySelector(\n        '#review-buttons-container > button'\n      );\n      if (typeof placeOrderButton !== 'undefined' && placeOrderButton) {\n        placeOrderButton.disabled = false;\n      }\n      return false;\n    }\n  };\n\n  const generateToken = () => {\n    if (!responseData) {\n      const placeOrderButton = document.querySelector(\n        '#review-buttons-container > button'\n      );\n      if (typeof placeOrderButton !== 'undefined' && placeOrderButton) {\n        placeOrderButton.disabled = true;\n      }\n\n      return EBANX.card.createToken(\n        {\n          card_number: parseInt(cardNumber.value.replace(/ /g, '')),\n          card_name: cardName.value,\n          card_due_date: `${(parseInt(cardExpirationMonth.value) || 0)}/${(parseInt(cardExpirationYear.value) || 0)}`,\n          card_cvv: cardCvv.value,\n        },\n        saveToken\n      );\n    }\n  };\n\n  const handleToken = () => {\n    if (!isFormEmpty()) {\n      generateToken();\n    }\n  };\n\n  const clearResponseData = () => {\n    responseData = null;\n    ebanxToken.value = '';\n    ebanxBrand.value = '';\n    ebanxMaskedCardNumber.value = '';\n    ebanxDeviceFingerprint.value = '';\n  };\n\n  if (hasEbanxForm) {\n    cardName.addEventListener('blur', handleToken, false);\n    cardNumber.addEventListener('blur', handleToken, false);\n    cardExpirationMonth.addEventListener('blur', handleToken, false);\n    cardExpirationYear.addEventListener('blur', handleToken, false);\n    cardCvv.addEventListener('blur', handleToken, false);\n\n    cardName.addEventListener('change', clearResponseData, false);\n    cardNumber.addEventListener('change', clearResponseData, false);\n    cardExpirationMonth.addEventListener('change', clearResponseData, false);\n    cardExpirationYear.addEventListener('change', clearResponseData, false);\n    cardCvv.addEventListener('change', clearResponseData, false);\n  }\n};\n"]}