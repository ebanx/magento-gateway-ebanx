{"version":3,"sources":["frontend/base/default/ebanx/js/document.js"],"names":["defaultLabel","taxVatLabel","document","querySelector","getElementById","countrySelect","country","toLowerCase","getLabelByCountry","join","toUpperCase","EBANXData","OSCRequire","ebanxRemoveOSCRequireDocument","changeTaxVatLabel","undefined","value","newLabel","setTimeout","placeholder","taxVatInput","inputHandler","innerHTML","street","parentNode","insertBefore","maskTaxVat","div","setAttribute","previousElementSibling","amsCheckoutHandler","addEventListener","dispatchEvent","Event","init"],"mappings":"aAGA,IAAAA,aAAA,KAGIC,YAAaC,SAASC,cAAc,iCADpCH,YAAeE,SAAnBE,eAAA,kBACIH,cAAaC,SAASC,cAAc,yBAElCE,kBAAgBH,SAAAA,EAASC,GAG7B,OAAQG,EAAQC,eADZC,IAAAA,KACJ,OAAQF,UAAQC,4BAAhBE,KAAA,OAAAC,cACE,IAAK,KACH,MAAOC,MACT,IAAK,KACH,MAAO,MACT,QACE,OAAOX,IAPbY,WAAA,SAAAN,GAc+C,oBAAlCO,+BADPD,8BAAAA,IAANE,kBAAA,WAOE,IAAMR,QAAUS,GAAKC,MADjBF,EAAAA,kBAAAA,EAAAA,cAEJF,WAAMK,GAENL,WAGE,WADFM,YACEC,YAAW,IADb,IAQAlB,YAAIK,UAAoBA,EAEpB,OADFY,GACQ,OAANZ,GAAM,OAAAA,GACJc,WAFJ,WAMDA,YAAAD,YAAAF,GAEDI,IAIAA,aAAenB,YAASC,IAGpBmB,KAAAA,WAQJC,IAAAA,EAAOC,SAAWA,cAAWC,sBACxBd,EAAAA,SAAUe,cAAY,MACzBC,EAAAC,aAAA,kBAAA,QACDD,EAAAL,UAAA,wUAHDC,EAAOC,WAAWA,WAAWC,aAAaE,EAAKJ,EAAOM,wBAYpDxB,UAAAA,aAPGJ,aAA6C,mBAAvB6B,qBAY7B5B,YAAS6B,sBARH9B,aAAeI,eAAiBe,cAClCpB,aAAeC,YAAYqB,UAE3BjB,cAAc0B,iBAAiB,SAAUjB,mBACzCT,cAAc2B,cAAc,IAAIC,MAAM,cAI1C/B,SAAS6B,iBAAiB,mBAAoBG","file":"document.js","sourcesContent":["/* global EBANXData */\n/* global amsCheckoutHandler */\n/* global ebanxRemoveOSCRequireDocument */\n/* global inputHandler */\n\nlet defaultLabel = null;\nlet taxVatLabel= document.querySelector('label[for=\"billing\\\\:taxvat\"]');\nconst taxVatInput = document.getElementById('billing:taxvat');\nconst countrySelect = document.querySelector('#billing\\\\:country_id');\n\nconst getLabelByCountry = (country, defaultLabel) => {\n  switch (country.toLowerCase()) {\n    case 'br':\n      return EBANXData.brazilAllowedDocumentFields.join(' / ').toUpperCase();\n    case 'co':\n      return 'DNI';\n    case 'cl':\n      return 'RUT';\n    default:\n      return defaultLabel;\n  }\n};\n\nconst OSCRequire = country => {\n  if (typeof ebanxRemoveOSCRequireDocument !== 'undefined') {\n    ebanxRemoveOSCRequireDocument(country);\n  }\n};\n\nconst changeTaxVatLabel = () => {\n  const country = this.value;\n  const newLabel = getLabelByCountry(country, defaultLabel);\n\n  OSCRequire(country);\n\n  setTimeout(\n    function() {\n      taxVatInput.placeholder = '';\n    },\n    10\n  );\n\n  taxVatLabel.innerHTML = newLabel;\n  if (country === 'BR' || country === 'CO' || country === 'CL') {\n    setTimeout(\n      () => {\n        taxVatInput.placeholder = newLabel;\n      },\n      10\n    );\n  }\n\n  inputHandler(taxVatInput, country);\n};\n\nconst init = () => {\n  const street = document.querySelector('#billing\\\\:street1');\n  const div = document.createElement('li');\n  div.setAttribute('contentEditable', 'true');\n  div.innerHTML = `<div class=\"field\">\n    <label for=\"billing:ebanx_document_type\" class=\"required\">\n        Document Type\n    </label>\n    <div class=\"input-box\">\n        <input type=\"text\" name=\"billing[ebanx_document_type]\" id=\"billing:ebanx_document_type\" title=\"Document Type\" class=\"input-text required-entry\" />\n    </div>\n</div>`;\n  street.parentNode.parentNode.insertBefore(div, street.previousElementSibling);\n  if (!EBANXData.maskTaxVat) {\n    return;\n  }\n\n  if (!taxVatLabel && typeof amsCheckoutHandler === 'function') {\n    taxVatLabel = amsCheckoutHandler();\n  }\n\n  if (taxVatLabel && countrySelect && taxVatInput) {\n    defaultLabel = taxVatLabel.innerHTML;\n\n    countrySelect.addEventListener('change', changeTaxVatLabel);\n    countrySelect.dispatchEvent(new Event('change'));\n  }\n};\n\ndocument.addEventListener('DOMContentLoaded', init);\n"]}