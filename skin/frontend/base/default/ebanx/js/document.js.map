{"version":3,"sources":["frontend/base/default/ebanx/js/document.js"],"names":["defaultLabel","taxVatLabel","countrySelect","country","toLowerCase","getLabelByCountry","join","toUpperCase","EBANXData","OSCRequire","ebanxRemoveOSCRequireDocument","changeTaxVatLabel","value","newLabel","setTimeout","placeholder","taxVatInput","inputHandler","documentTypesByCountry","ARG_CUIT","ARG_CUIL","ARG_CDI","addDocumentTypeField","COL_CE","getElementById","select","document","documentType","parentElement","removeChild","Object","key","divHTML","ul","insertBefore","closest","maskTaxVat","div","className","innerHTML","querySelector","amsCheckoutHandler","addEventListener","dispatchEvent","Event","init"],"mappings":"aAGA,IAAAA,aAAA,KAGIC,YAAc,KADdD,YAAAA,KACAC,cAAc,KAEdC,kBAAJ,SAAAC,EAAAH,GAGE,OAAQG,EAAQC,eADZC,IAAAA,KACJ,OAAQF,UAAQC,4BAAhBE,KAAA,OAAAC,cACE,IAAK,KACH,MAAOC,WACT,IAAK,KACH,MAAO,MACT,IAAK,KACH,MAAO,WACT,QACE,OAAOR,IATbS,WAAA,SAAAN,GAgB+C,oBAAlCO,+BADPD,8BAAAA,IAANE,kBAAA,WAOE,IAAMR,EAAUD,cAAcU,MAD1BD,EAAAA,kBAAAA,EAAAA,cAEJF,WAAMI,GAENJ,WAGE,WADFK,YACEC,YAAW,IADb,IAQAd,YAAIE,UAAoBA,EAEpB,OADFW,GACQ,OAANX,GAAM,OAAAA,GAAA,OAAAA,GACJa,WAFJ,WAMDA,YAAAD,YAAAF,GAEDI,IAIAA,aAAId,YAAkBA,IAGpBe,uBAAgB,SAAAf,GACjB,MAAA,OAAAA,EALH,CAAAgB,SAAA,OAAAC,SAAA,OAAAC,QAAA,OAGyB,OAAZlB,EAKPmB,CAAAA,OAAAA,uBAAAA,QAAAA,MAA6BC,OAAA,2BAL1B,GAKHD,qBAAuB,WAK3B,GAAwBE,OAAlBC,cAASC,OAAf,OAAexB,cAAwBU,MAAvC,CAAA,IAAMa,EAASC,SAASF,eAAe,uBAKjCG,GAHJF,EAAOG,cAAcC,YAAYJ,GAanCK,IAAAA,EAAYH,uBAAgCI,cAAKnB,OAAjDoB,EAAA,0VAYAC,OAAGC,KAAAA,GAAkBlB,QAAYmB,SAAQJ,GAhC3CC,GAAA,kBAAAD,EAAA,KAAAJ,EAAAI,GAAA,cAoCE9B,GAAAA,wBAIA,IAAKO,EAAAA,SAAU4B,cAAenC,MAC5BoC,EAAAC,UAAA,SACDD,EAAAE,UAAAP,EAXUhB,YAAYmB,QAAQ,MAa/Bb,aAAAA,EAAAA,YAAAA,QAAAA,SAGErB,KAAAA,WACDA,YAAAyB,SAAAc,cAAA,iCAXDxB,YAAcU,SAASF,eAAe,kBAatCtB,cAAIA,SAAesC,cAAA,0BAVdhC,UAAU4B,YAAenC,aAAgBe,aAA+B,OAAhBA,eAgB5DM,uBAVIrB,aAA6C,mBAAvBwC,qBAa7Bf,YAASgB,sBATHxC,gBACFF,aAAeC,YAAYsC,UAE3BrC,cAAcwC,iBAAiB,SAAU/B,mBACzCT,cAAcwC,iBAAiB,SAAUpB,sBACzCpB,cAAcyC,cAAc,IAAIC,MAAM,cAI1ClB,SAASgB,iBAAiB,mBAAoBG","file":"document.js","sourcesContent":["/* global EBANXData */\n/* global amsCheckoutHandler */\n/* global ebanxRemoveOSCRequireDocument */\n/* global inputHandler */\n\nlet defaultLabel = null;\nlet taxVatLabel = null;\nlet taxVatInput = null;\nlet countrySelect = null;\n\nconst getLabelByCountry = (country, defaultLabel) => {\n  switch (country.toLowerCase()) {\n    case 'br':\n      return EBANXData.brazilAllowedDocumentFields.join(' / ').toUpperCase();\n    case 'co':\n      return 'Document';\n    case 'cl':\n      return 'RUT';\n    case 'ar':\n      return 'Document';\n    default:\n      return defaultLabel;\n  }\n};\n\nconst OSCRequire = country => {\n  if (typeof ebanxRemoveOSCRequireDocument !== 'undefined') {\n    ebanxRemoveOSCRequireDocument(country);\n  }\n};\n\nconst changeTaxVatLabel = () => {\n  const country = countrySelect.value;\n  const newLabel = getLabelByCountry(country, defaultLabel);\n\n  OSCRequire(country);\n\n  setTimeout(\n    function() {\n      taxVatInput.placeholder = '';\n    },\n    10\n  );\n\n  taxVatLabel.innerHTML = newLabel;\n  if (country === 'BR' || country === 'CO' || country === 'CL' || country === 'AR') {\n    setTimeout(\n      () => {\n        taxVatInput.placeholder = newLabel;\n      },\n      10\n    );\n  }\n\n  inputHandler(taxVatInput, country);\n};\n\nconst documentTypesByCountry = (country) => {\n  if (country === 'AR') {\n    return {ARG_CUIT: 'CUIT', ARG_CUIL: 'CUIL', ARG_CDI: 'CDI'};\n  } else if (country === 'CO') {\n    return {COL_CC: 'Cédula de Ciudadania', COL_NIT: 'NIT', COL_CE: 'Cédula Extranjeria'};\n  }\n};\n\nconst addDocumentTypeField = () => {\n  if (countrySelect.value !== 'AR' && countrySelect.value !== 'CO') {\n    return;\n  }\n\n  const select = document.getElementById('ebanx-document-type');\n  if (select) {\n    select.parentElement.removeChild(select);\n  }\n\n  const documentType = documentTypesByCountry(countrySelect.value);\n\n  var divHTML = '<div id=\"ebanx-document-type\" class=\"field\">' +\n    '<label for=\"billing:ebanx_document_type\" class=\"required\">' +\n    ' Document Type' +\n    '</label>' +\n    '<div class=\"input-box\">' +\n    ' <select name=\"billing[ebanx_document_type]\" id=\"billing:ebanx_document_type\" title=\"Document Type\" class=\"validate-select required-entry\">' +\n    '<option value=\"\" selected>Select a document type</option>';\n\n  Object.keys(documentType).forEach(function (key) {\n    divHTML += '<option value=\"' + key + '\">' + documentType[key] + '</option>';\n  });\n\n  divHTML += '</select>' +\n    '</div>' +\n    '</div>';\n\n  const div = document.createElement('li');\n  div.className = 'fields';\n  div.innerHTML = divHTML;\n  const ul = taxVatInput.closest('ul');\n  ul.insertBefore(div, taxVatInput.closest('li'));\n};\n\nconst init = () => {\n  taxVatLabel= document.querySelector('label[for=\"billing\\\\:taxvat\"]');\n  taxVatInput = document.getElementById('billing:taxvat');\n  countrySelect = document.querySelector('#billing\\\\:country_id');\n\n  if (!EBANXData.maskTaxVat && !taxVatLabel && !taxVatInput && taxVatInput === null) {\n    return;\n  }\n\n  addDocumentTypeField();\n\n  if (!taxVatLabel && typeof amsCheckoutHandler === 'function') {\n    taxVatLabel = amsCheckoutHandler();\n  }\n\n  if (countrySelect) {\n    defaultLabel = taxVatLabel.innerHTML;\n\n    countrySelect.addEventListener('change', changeTaxVatLabel);\n    countrySelect.addEventListener('change', addDocumentTypeField);\n    countrySelect.dispatchEvent(new Event('change'));\n  }\n};\n\ndocument.addEventListener('DOMContentLoaded', init);\n"]}